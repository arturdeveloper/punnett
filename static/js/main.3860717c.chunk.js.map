{"version":3,"sources":["assets/green_pea.svg","assets/yellow_pea.svg","components/Punnett/Punnett.js","components/BarChart/BarChart.js","components/RatioDisplay/Ratiodisplay.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Square","props","shape","big","coloring","value","green_pea","yellow_pea","selectFlag","selected","compClass","concat","react_default","a","createElement","className","onClick","src","Diagram","i","_this","this","size","arguments","length","undefined","squares","cross","includes","renderSquare","Component","Punnett","_this2","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","plants","currentSelections","firstCross","secondCross","newOffspring","calculateOffspring","indexOf","setState","ratios","calculateRatios","onChange","_this3","_this$state","Punnett_Diagram","handleClick","genRatio","calculatePossibleOffsprings","phenRatio","calculatePhenRatio","randomFlip","ratio","type","hasOwnProperty","first","second","offsprings","j","outcome","forEach","c","Math","floor","random","Bar","style","backgroundColor","color","height","assign","visibility","Barchart","BarChart_Bar","Ratiodisplay","App","handleEvent","YY","Yy","yy","components_Punnett_Punnett","BarChart_BarChart","components_RatioDisplay_Ratiodisplay","Boolean","window","location","hostname","match","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3860717c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/green_pea.341f84d7.svg\";","module.exports = __webpack_public_path__ + \"static/media/yellow_pea.9ab67e5b.svg\";","import React, { Component } from \"react\";\r\nimport \"./Punnett.css\";\r\nimport green_pea from \"../../assets/green_pea.svg\";\r\nimport yellow_pea from \"../../assets/yellow_pea.svg\";\r\n\r\nfunction Square(props) {\r\n  let shape = props.big === \"big\" ? \"bigsquare\" : \"smallsquare\";\r\n  let coloring = props.value === \"yy\" ? green_pea : yellow_pea;\r\n  let selectFlag = props.selected ? \"selected\" : \"\";\r\n\r\n  let compClass = `${shape} ${selectFlag}`;\r\n\r\n  return (\r\n    <div className={compClass} onClick={props.onClick}>\r\n      <img src={coloring} />\r\n      <h3>{props.value} </h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nclass Diagram extends Component {\r\n  renderSquare(i, size = \"small\") {\r\n    return (\r\n      <Square\r\n        value={this.props.squares[i]}\r\n        onClick={() => this.props.onClick(i)}\r\n        selected={this.props.cross.includes(i)}\r\n        big={size}\r\n      />\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"Punnett\">\r\n        <h2 className=\"Punnett-header\">\r\n          Select two pea plant genotypes to cross.\r\n        </h2>\r\n        <div className=\"diagram-container\">\r\n          <div className=\"diagram-row row1\">\r\n            {this.renderSquare(0)}\r\n            {this.renderSquare(1)}\r\n            {this.renderSquare(2)}\r\n          </div>\r\n          <div className=\"diagram-text row1\">\r\n            <h3>Y</h3>\r\n            <h3>y</h3>\r\n          </div>\r\n          <div className=\"diagram-row row2\">\r\n            <div className=\"diagram-column column1\">\r\n              {this.renderSquare(3)}\r\n              {this.renderSquare(4)}\r\n              {this.renderSquare(5)}\r\n            </div>\r\n            <div className=\"diagram-column diagram-text column2\">\r\n              <h3>Y</h3>\r\n              <h3>y</h3>\r\n            </div>\r\n\r\n            <div className=\"diagram-column column3\">\r\n              <div className=\"diagram-row column4\">\r\n                {this.renderSquare(6, \"big\")}\r\n                {this.renderSquare(7, \"big\")}\r\n              </div>\r\n              <div className=\"diagram-row column4\">\r\n                {this.renderSquare(8, \"big\")}\r\n                {this.renderSquare(9, \"big\")}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row3\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Punnett extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      plants: [\"YY\", \"Yy\", \"yy\", \"YY\", \"Yy\", \"yy\", \"YY\", \"Yy\", \"Yy\", \"yy\"],\r\n      selected: [0, 3, 6]\r\n    };\r\n  }\r\n  handleClick(i) {\r\n    let currentSelections = this.state.selected;\r\n    if (i >= 0 && i <= 2) {\r\n      currentSelections[0] = i;\r\n    }\r\n    if (i >= 3 && i <= 5) {\r\n      currentSelections[1] = i;\r\n    }\r\n\r\n    let plants = this.state.plants;\r\n    let firstCross = plants[currentSelections[0]];\r\n    let secondCross = plants[currentSelections[1]];\r\n\r\n    let newOffspring = calculateOffspring(firstCross, secondCross);\r\n    currentSelections[2] = plants.indexOf(newOffspring, 6);\r\n\r\n    this.setState({\r\n      selected: currentSelections\r\n    });\r\n\r\n    let ratios = calculateRatios(firstCross, secondCross);\r\n\r\n    this.props.onChange(ratios);\r\n  }\r\n  render() {\r\n    const { plants, selected } = this.state;\r\n    return (\r\n      <Diagram\r\n        cross={selected}\r\n        squares={plants}\r\n        onClick={i => this.handleClick(i)}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst calculateRatios = (firstCross, secondCross) => {\r\n  let genRatio = calculatePossibleOffsprings(firstCross, secondCross);\r\n\r\n  let phenRatio = calculatePhenRatio(genRatio);\r\n  return { phenRatio, genRatio };\r\n};\r\n\r\nconst calculateOffspring = (firstCross, secondCross) => {\r\n  let newOffspring = firstCross[randomFlip()] + secondCross[randomFlip()];\r\n  newOffspring = newOffspring === \"yY\" ? \"Yy\" : newOffspring;\r\n\r\n  return newOffspring;\r\n};\r\n\r\nconst calculatePhenRatio = genRatio => {\r\n  let ratio = [0, 0];\r\n  for (const type in genRatio) {\r\n    if (genRatio.hasOwnProperty(type)) {\r\n      if (type !== \"yy\") {\r\n        ratio[0] += genRatio[type];\r\n      } else {\r\n        ratio[1] += genRatio[type];\r\n      }\r\n    }\r\n  }\r\n  return ratio;\r\n};\r\n\r\nconst calculatePossibleOffsprings = (first, second) => {\r\n  let offsprings = {};\r\n  for (let i = 0; i < 2; i++) {\r\n    for (let j = 0; j < 2; j++) {\r\n      let outcome = first[i] + second[j];\r\n      outcome = outcome === \"yY\" ? \"Yy\" : outcome;\r\n      if (offsprings[outcome]) {\r\n        offsprings[outcome] += 1;\r\n      } else {\r\n        offsprings[outcome] = 1;\r\n      }\r\n    }\r\n  }\r\n\r\n  [\"YY\", \"Yy\", \"yy\"].forEach(c => {\r\n    if (!offsprings[c]) {\r\n      offsprings[c] = 0;\r\n    }\r\n  });\r\n\r\n  return offsprings;\r\n};\r\n\r\nconst randomFlip = () => {\r\n  return Math.floor(Math.random() * 2);\r\n};\r\n\r\nexport default Punnett;\r\n","import React, { Component } from \"react\";\r\nimport \"./BarChart.css\";\r\n\r\nconst Bar = props => {\r\n  let style = {\r\n    backgroundColor: props.color\r\n  };\r\n\r\n  if (props.height >= 1) {\r\n    Object.assign(style, { height: `${props.height * 25}%` });\r\n  } else {\r\n    Object.assign(style, { visibility: \"hidden\" });\r\n  }\r\n\r\n  return <div style={style} className=\"Barchart-bar\" />;\r\n};\r\n\r\nconst Barchart = props => {\r\n  return (\r\n    <div className=\"Barchart\">\r\n      <div className=\"Barchart-title\">\r\n        <h3>PHENOTYPIC RATIO</h3>\r\n      </div>\r\n      <div className=\"Barchart-external\">\r\n        <div className=\"Barchart-label\">\r\n          <h2>4</h2>\r\n          <h2>3</h2>\r\n          <h2>2</h2>\r\n          <h2>1</h2>\r\n        </div>\r\n        <div className=\"Barchart-container\">\r\n          <div className=\"Barchart-axes\" />\r\n          <div className=\"Barchart-area\">\r\n            <Bar height={props.phenRatio[0]} color=\"#EFCE22\" />\r\n            <Bar height={props.phenRatio[1]} color=\"#65B14F\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Barchart;\r\n","import React, { Component } from \"react\";\r\nimport \"./Ratiodisplay.css\";\r\n\r\nconst Ratiodisplay = props => {\r\n  const ratio = props.genRatio;\r\n\r\n  return (\r\n    <div className=\"Ratiodisplay\">\r\n      <div className=\"Ratiodisplay-title\">\r\n        <h3>GENOTYPIC RATIO</h3>\r\n      </div>\r\n      <div className=\"Ratiodisplay-display\">\r\n        <h3>{ratio[\"YY\"]} YY</h3>\r\n        <h3>:</h3>\r\n        <h3>{ratio[\"Yy\"]} Yy</h3>\r\n        <h3>:</h3>\r\n        <h3>{ratio[\"yy\"]} yy</h3>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Ratiodisplay;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"../Punnett/Punnett\";\nimport Punnett from \"../Punnett/Punnett\";\nimport Barchart from \"../BarChart/BarChart\";\nimport Ratiodisplay from \"../RatioDisplay/Ratiodisplay\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { phenRatio: [4, 0], genRatio: { YY: \"0\", Yy: 0, yy: 0 } };\n  }\n\n  handleEvent = ratios => {\n    this.setState({ phenRatio: ratios.phenRatio, genRatio: ratios.genRatio });\n  };\n\n  render() {\n    const { phenRatio, genRatio } = this.state;\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\" />\n        <div className=\"App-container-1\">\n          <div className=\"App-logo\">\n            <h3>Logo</h3> <h4>|</h4> <h4> Mendellian Inheritance</h4>\n          </div>\n          <Punnett onChange={this.handleEvent} />\n        </div>\n        <div className=\"App-container-2\">\n          <Barchart phenRatio={phenRatio} />\n          <Ratiodisplay genRatio={genRatio} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}